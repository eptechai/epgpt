static_resources:
  listeners:
  - name: app
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 5001
    filter_chains:
      - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_http
            codec_type: AUTO
            http2_protocol_options: {}
            route_config:
              name: local_route
              virtual_hosts:
              - name: local_service
                domains: ["*"]
                routes:
                - match:
                    prefix: "/"
                  route:
                    cluster: svc_model
            http_filters:
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  
  clusters:
  - name: svc_model
    connect_timeout: 0.25s
    type: STATIC
    http2_protocol_options: {}
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: svc_model
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 192.100.100.100 # TODO: Parameterize for stg, prod
                port_value: 5001
        - endpoint:
            address:
              socket_address:
                address: 192.200.200.200 # TODO: Parameterize for stg, prod
                port_value: 5001
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          tls_certificates:
          - certificate_chain:
              filename: "/home/envoy/client.crt"
            private_key:
              filename: "/home/envoy/client.key"
          validation_context:
            trusted_ca:
              filename: "/home/envoy/ca.crt"